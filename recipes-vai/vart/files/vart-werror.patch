Disable -Werror

Workaround for:

| .../git/tools/Vitis-AI-Runtime/VART/vart/trace/src/util.cpp:38:23: error: loop variable 'i' creates a copy from type 'const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >' [-Werror=range-loop-construct]
|    38 |       for (const auto i : entry) {
|       |                       ^
| .../git/tools/Vitis-AI-Runtime/VART/vart/trace/src/util.cpp:38:23: note: use reference type to prevent copying
|    38 |       for (const auto i : entry) {
|       |                       ^
|       |                       &
| cc1plus: all warnings being treated as errors

Signed-off-by: Mark Hatle <mark.hatle@xilinx.com>

diff --git a/tools/Vitis-AI-Runtime/VART/vart/cmake/VitisCommon.cmake b/tools/Vitis-AI-Runtime/VART/vart/cmake/VitisCommon.cmake
index ddaf3601b..406fce99e 100644
--- a/cmake/VitisCommon.cmake
+++ b/cmake/VitisCommon.cmake
@@ -15,12 +15,12 @@
 #
 set (CMAKE_CXX_STANDARD 14)
 set (CMAKE_C_STANDARD 99)
-set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Werror -ggdb -O0 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-inline")
-set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -Wall -Werror")
-#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -Werror -march=skylake-avx512")
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -Werror")
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
-set(CMAKE_EXE "${CMAKE_C_FLAGS} -Wall -Werror")
+set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -ggdb -O0 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-inline")
+set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -Wall")
+#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -march=skylake-avx512")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
+set(CMAKE_EXE "${CMAKE_C_FLAGS} -Wall")
 set(CMAKE_SHARED_LINKER_FLAGS  "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-undefined")
 
 set(CMAKE_MACOSX_RPATH 1)
